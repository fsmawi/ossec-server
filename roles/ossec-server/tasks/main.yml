---
# tasks file for ossec-server

- name: "Install the correct repository"
  include: "RedHat.yml"

- name: "Install CIS Root Checks"
  get_url:
    url: "https://raw.githubusercontent.com/ossec/ossec-hids/master/src/rootcheck/db/{{ cis_distribution_filename }}"
    dest: "/var/ossec/etc/shared/{{ cis_distribution_filename }}"
    mode: 0660
    owner: root
    group: ossec

- name: "Generate SSL files"
  command: "openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:1825 -keyout sslmanager.key -out sslmanager.cert -subj /CN={{ ossec_server_fqdn }}/"
  args:
    creates: sslmanager.cert
    chdir: /var/ossec/etc/
  tags:
    - config

- name: "Installing SSL files."
  file:
    path: /var/ossec/etc/{{ item }}
    owner: root
    group: root
    mode: 0660
  with_items:
    - sslmanager.key
    - sslmanager.cert
  tags:
    - config

- name: "Installing the custom rules (rules_config.xml)"
  template:
    src: rules_config.xml
    dest: /var/ossec/rules/rules_config.xml
    owner: root
    group: root
    mode: 0644
  tags:
    - init
    - config
    - rules

- name: "Installing the custom rules (acquia_ossec_rules.xml)"
  template:
    src: acquia_ossec_rules.xml
    dest: /var/ossec/rules/acquia_ossec_rules.xml
    owner: root
    group: root
    mode: 0644
  tags:
    - init
    - config
    - rules

- name: "Installing the custom rules (acquia_auditd_rules.xml)"
  template:
    src: acquia_auditd_rules.xml
    dest: /var/ossec/rules/acquia_auditd_rules.xml
    owner: root
    group: root
    mode: 0644
  tags:
    - init
    - config
    - rules

- name: "Configure internal options (local_internal_options.conf)"
  template:
    src: local_internal_options.conf
    dest: /var/ossec/etc/local_internal_options.conf
    owner: root
    group: root
    mode: 0644
  tags:
    - init
    - config
    - rules

- name: "Configure rootkit (rootkit_files.txt)"
  template:
    src: rootkit_files.txt
    dest: /var/ossec/etc/shared/rootkit_files.txt
    owner: root
    group: root
    mode: 0644
  tags:
    - init
    - config
    - rules

- name: "Configure rootkit (rootkit_trojans.txt)"
  template:
    src: rootkit_trojans.txt
    dest: /var/ossec/etc/shared/rootkit_trojans.txt
    owner: root
    group: root
    mode: 0644
  tags:
    - init
    - config
    - rules

- name: "Configure rootkit (acquia_audit.txt)"
  template:
    src: acquia_audit.txt
    dest: /var/ossec/etc/shared/acquia_audit.txt
    owner: root
    group: root
    mode: 0644
  tags:
    - init
    - config
    - rules

- name: "Configure local_decoder"
  template:
    src: local_decoder.xml
    dest: /var/ossec/etc/local_decoder.xml
    owner: root
    group: root
    mode: 0644
  tags:
    - init
    - config
    - rules

- name: "Configure the ossec-server"
  template:
    src: var-ossec-etc-ossec-server.conf
    dest: /var/ossec/etc/{{ ossec_server_config_filename }}
    owner: root
    group: root
    mode: 0644
  notify:
    - restart ossec-server
  tags:
    - init
    - config

- name: "Configure agent IP"
  template:
    src: ossec_agent_ip_config.sh
    dest: /var/ossec/bin/ossec_agent_ip_config.sh
    owner: root
    group: root
    mode: +x

- name: "Check if client-syslog is enabled"
  shell: "/var/ossec/bin/ossec-control status | grep -c 'ossec-csyslogd is running' | xargs echo"
  register: csyslog_running
  changed_when: False
  when:
    - ossec_server_config.syslog_outputs is defined

- name: "Enable client-syslog if not running and ossec_server_config.syslog_outputs is given"
  command: /var/ossec/bin/ossec-control enable client-syslog
  when:
    - ossec_server_config.syslog_outputs is defined
    - csyslog_running.stdout == '0'

- name: "Start client-syslog if not running and ossec_server_config.syslog_outputs is given"
  command: /var/ossec/bin/ossec-control start client-syslog
  when:
    - ossec_server_config.syslog_outputs is defined
    - csyslog_running.stdout == '0'

- name: "Write ossec-authd systemd file"
  template:
    src: ossec-authd.service
    dest: /lib/systemd/system/ossec-authd.service
  when:
    - ansible_service_mgr == "systemd"
    - ansible_os_family != "CoreOS"
  notify: systemd daemon-reload
  tags:
    - init
    - config

- name: "Ensure ossec authd service is started and enabled"
  service:
    name: ossec-authd
    enabled: yes
    state: started
